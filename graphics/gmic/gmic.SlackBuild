#!/bin/bash

# Slackware build script for G'mic

# Copyright 2022 Giorgio Peron <giorgio.peron@gmail.com>, Belluno, Italy
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gmic
VERSION=${VERSION:-3.1.5}
COMMUNITYVERSION=${COMMUNITYVERSION:-3.1.5}
ZART=${ZART:-ac29dcbcaba778060053480f3e5e7692e42a5338}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O0 -march=i586 -mtune=i686 -fno-fast-math"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O0 -march=i686 -mtune=i686 -fno-fast-math"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O0 -fno-fast-math"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM
rm -rf $PRGNAM-community
rm -rf $PRGNAM-zart
tar xvf $CWD/$PRGNAM\_$VERSION.tar.gz --warning=no-unknown-keyword
mv $PRGNAM-$VERSION $PRGNAM
tar xvf $CWD/$PRGNAM-$COMMUNITYVERSION.tar.gz || tar xvf $CWD/$PRGNAM-community-$PRGNAM-$COMMUNITYVERSION.tar.gz
mv $PRGNAM-community-$PRGNAM-$COMMUNITYVERSION $PRGNAM-community
unzip $CWD/zart-$ZART.zip || unzip $CWD/$ZART.zip
mv zart-$ZART $PRGNAM-zart
cd $PRGNAM
cp $CWD/CMakeLists.txt .
mkdir -p cmake
cp $CWD/FindCImg.cmake $CWD/FindGMicStdlib.cmake cmake

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

sed -i -e "s|LIB = lib|LIB = lib$LIBDIRSUFFIX|g" \
       -e "s|/share/man/|/man/|g" \
       src/Makefile || exit 1

cmake -B build -S . \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DENABLE_DYNAMIC_LINKING=ON \
  -DBUILD_LIB_STATIC=OFF \
  -DENABLE_OPENCV=ON
cmake --build build
DESTDIR="$PKG" cmake --install build
mv $PKG/usr/share/man $PKG/usr/

export LDFLAGS="$LDFLAGS -L../build"
cmake -B build-qt -S ./gmic-qt \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DENABLE_DYNAMIC_LINKING=ON \
  -DENABLE_SYSTEM_GMIC=OFF \
  -DGMIC_PATH=../src \
  -DGMIC_QT_HOST=none
cmake --build build-qt
DESTDIR="$PKG" cmake --install build-qt

cmake -B build-gimp -S ./gmic-qt \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DENABLE_DYNAMIC_LINKING=ON \
  -DENABLE_SYSTEM_GMIC=OFF \
  -DGMIC_PATH=../src \
  -DGMIC_QT_HOST=gimp
cmake --build build-gimp
DESTDIR="$PKG" cmake --install build-gimp

cmake -B build-krita -S ./gmic-qt \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DENABLE_DYNAMIC_LINKING=ON \
  -DENABLE_SYSTEM_GMIC=OFF \
  -DGMIC_PATH=../src \
  -DGMIC_QT_HOST=krita
cmake --build build-krita
DESTDIR="$PKG" cmake --install build-krita

cd ../$PRGNAM-zart
qmake-qt5 GMIC_PATH=../$PRGNAM/src GMIC_DYNAMIC_LINKING=off QMAKE_CXXFLAGS+=" -DOPENCV2_HEADERS"
make
make install INSTALL_ROOT=$PKG
mkdir -p $PKG/usr/share/applications
install -Dm644 zart.desktop $PKG/usr/share/applications

cd ../$PRGNAM
rm -rf $PKG/usr/share/man || true

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a COPYING* README* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
