#!/bin/bash

# Slackware build script for shiboken6

# Copyright 2025 Giorgio Peron, Belluno, Italy
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=shiboken6
VERSION=${VERSION:-6.8.3}
SRCNAM=pyside-setup
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
# rm -rf $SRCNAM-$VERSION
# tar xvf $CWD/$SRCNAM-$VERSION.tar.xz
# cd $SRCNAM-$VERSION/sources/$PRGNAM
# rm -rf $PRGNAM-$VERSION
# git clone https://code.qt.io/pyside/pyside-setup  $PRGNAM-$VERSION
# cd $PRGNAM-$VERSION

rm -rf $SRCNAM
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz
cd $SRCNAM
# patch -p1 < $CWD/fix-build.patch
# Install missing doc snippets
# git cherry-pick -n 12aba6c4dfafe191a4640e3ab755a1c7e2ddfc44
# git cherry-pick -n cacc9c5803a6dec820dd46211a836453183c8dab

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

export CC=/usr/bin/clang
export CXX=/usr/bin/clang++
CLANG_INSTALL_DIR="/usr" \
cmake -B build \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DPYTHON_EXECUTABLE=/usr/bin/python3 \
    -DSHIBOKEN_PYTHON_LIBRARIES=`python -c "from sysconfig import get_path; print(get_path('platlib'))"` \
    -DSHIBOKEN_PYTHON_MODULE_DIR=`python -c "from sysconfig import get_path; print(get_path('platlib'))"` \
    -DBUILD_TESTS=OFF \
    -DFORCE_LIMITED_API=no \
    -DNO_QT_TOOLS=yes \
    -DCMAKE_BUILD_TYPE=Release
PYTHONPATH=./build/sources \
cmake --build build/sources/shiboken6
DESTDIR=$PKG cmake --install build/sources/shiboken6
# DESTDIR=$PKG cmake --install build/sources/pyside6
# DESTDIR=$PKG cmake --install build/sources/pyside-tools

mv $PKG/usr/lib/* $PKG/usr/lib$LIBDIRSUFFIX/
rm -rf $PKG/usr/lib 
sed -i -e "s|/lib/|/lib64/|g" $PKG/usr/lib$LIBDIRSUFFIX/cmake/Shiboken6/Shiboken6Config.cpython-312-x86_64-linux-gnu.cmake
# Install egg-info
export PATH="/usr/lib$LIBDIRSUFFIX/qt6/bin:$PATH"
python setup.py egg_info --build-type=shiboken6
python setup.py egg_info --build-type=shiboken6-generator
_pythonpath=`python -c "from sysconfig import get_path; print(get_path('platlib'))"`
mkdir -p $PKG$_pythonpath
cp -r shiboken6*.egg-info $PKG$_pythonpath
# python setup.py egg_info --build-type=pyside6
# cp -r PySide6.egg-info "$pkgdir"/$_pythonpath

# Add convenience pyside6-designer wrapper
# Entry points in /usr/bin are not installed in the cmake build. This is the only one that does anything besides wrapping the Qt executable
# echo "export LD_PRELOAD="`python -c "from sysconfig import get_config_var; print(get_config_var('LDLIBRARY'))"` > pyside6-designer
# echo "exec designer6 \$@" >> pyside6-designer
# install -Dm755 pyside6-designer -t $PKG/usr/bin

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  README* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
